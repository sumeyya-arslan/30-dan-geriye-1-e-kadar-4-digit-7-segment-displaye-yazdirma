

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu May 09 08:39:28 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001E                     	;# 
    49  001F                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  0091                     	;# 
    54  0092                     	;# 
    55  0093                     	;# 
    56  0094                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0097                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009A                     	;# 
    63  009B                     	;# 
    64  009B                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  0111                     	;# 
    72  0112                     	;# 
    73  0113                     	;# 
    74  0114                     	;# 
    75  0115                     	;# 
    76  0116                     	;# 
    77  0117                     	;# 
    78  0118                     	;# 
    79  0119                     	;# 
    80  011A                     	;# 
    81  011B                     	;# 
    82  011D                     	;# 
    83  011E                     	;# 
    84  018C                     	;# 
    85  018D                     	;# 
    86  018E                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0199                     	;# 
    97  019A                     	;# 
    98  019B                     	;# 
    99  019B                     	;# 
   100  019C                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  019F                     	;# 
   104  020C                     	;# 
   105  020D                     	;# 
   106  020E                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  0212                     	;# 
   110  0212                     	;# 
   111  0213                     	;# 
   112  0213                     	;# 
   113  0214                     	;# 
   114  0214                     	;# 
   115  0215                     	;# 
   116  0215                     	;# 
   117  0215                     	;# 
   118  0216                     	;# 
   119  0216                     	;# 
   120  0217                     	;# 
   121  0217                     	;# 
   122  0219                     	;# 
   123  021A                     	;# 
   124  021B                     	;# 
   125  021C                     	;# 
   126  021D                     	;# 
   127  021E                     	;# 
   128  021F                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0298                     	;# 
   138  0298                     	;# 
   139  0299                     	;# 
   140  029A                     	;# 
   141  029B                     	;# 
   142  029C                     	;# 
   143  029D                     	;# 
   144  029E                     	;# 
   145  0311                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0318                     	;# 
   150  0318                     	;# 
   151  0319                     	;# 
   152  031A                     	;# 
   153  038C                     	;# 
   154  038D                     	;# 
   155  038E                     	;# 
   156  0391                     	;# 
   157  0392                     	;# 
   158  0393                     	;# 
   159  0394                     	;# 
   160  0395                     	;# 
   161  0396                     	;# 
   162  039A                     	;# 
   163  039C                     	;# 
   164  039D                     	;# 
   165  039E                     	;# 
   166  039F                     	;# 
   167  0415                     	;# 
   168  0416                     	;# 
   169  0417                     	;# 
   170  041C                     	;# 
   171  041D                     	;# 
   172  041E                     	;# 
   173  0FE4                     	;# 
   174  0FE5                     	;# 
   175  0FE6                     	;# 
   176  0FE7                     	;# 
   177  0FE8                     	;# 
   178  0FE9                     	;# 
   179  0FEA                     	;# 
   180  0FEB                     	;# 
   181  0FED                     	;# 
   182  0FEE                     	;# 
   183  0FEF                     	;# 
   184                           
   185                           	psect	idataBANK0
   186  019B                     __pidataBANK0:	
   187                           
   188                           ;initializer for _Digit
   189  019B  3403               	retlw	3
   190  019C  349F               	retlw	159
   191  019D  3425               	retlw	37
   192  019E  340D               	retlw	13
   193  019F  3499               	retlw	153
   194  01A0  3449               	retlw	73
   195  01A1  3441               	retlw	65
   196  01A2  341F               	retlw	31
   197  01A3  3401               	retlw	1
   198  01A4  3409               	retlw	9
   199                           
   200                           	psect	nvBANK0
   201  002F                     __pnvBANK0:	
   202  002F                     _number:	
   203  002F                     	ds	2
   204  0015                     _TMR0	set	21
   205  005F                     _GIE	set	95
   206  005E                     _PEIE	set	94
   207  005D                     _TMR0IE	set	93
   208  005A                     _TMR0IF	set	90
   209  0095                     _OPTION_REGbits	set	149
   210  008E                     _TRISC	set	142
   211  010E                     _LATC	set	270
   212  010E                     _LATCbits	set	270
   213  0875                     _LATC5	set	2165
   214  0876                     _LATC6	set	2166
   215  0877                     _LATC7	set	2167
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  0012                     start_initialization:	
   221  0012                     __initialization:	
   222                           
   223                           ; Clear objects allocated to COMMON
   224  0012  01FB               	clrf	__pbssCOMMON& (0+127)
   225                           
   226                           ; Clear objects allocated to BANK0
   227  0013  01AA               	clrf	__pbssBANK0& (0+127)
   228  0014  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   229  0015  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   230  0016  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   231  0017  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   232                           
   233                           ; Initialize objects allocated to BANK0
   234  0018  309B               	movlw	low __pidataBANK0
   235  0019  0084               	movwf	4
   236  001A  3081               	movlw	(high __pidataBANK0)| (0+128)
   237  001B  0085               	movwf	5
   238  001C  3020               	movlw	low __pdataBANK0
   239  001D  0086               	movwf	6
   240  001E  3000               	movlw	high __pdataBANK0
   241  001F  0087               	movwf	7
   242  0020  300A               	movlw	10
   243  0021  3181  21A5         	fcall	init_ram
   244  0023                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247  0023                     __end_of__initialization:	
   248  0023  0020               	movlb	0
   249  0024  3180  28DC         	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252  007B                     __pbssCOMMON:	
   253  007B                     _d1:	
   254  007B                     	ds	1
   255                           
   256                           	psect	bssBANK0
   257  002A                     __pbssBANK0:	
   258  002A                     _counter:	
   259  002A                     	ds	2
   260  002C                     _d2:	
   261  002C                     	ds	1
   262  002D                     _d3:	
   263  002D                     	ds	1
   264  002E                     _d4:	
   265  002E                     	ds	1
   266                           
   267                           	psect	dataBANK0
   268  0020                     __pdataBANK0:	
   269  0020                     _Digit:	
   270  0020                     	ds	10
   271                           
   272                           	psect	inittext
   273  01A5                     init_ram:	
   274  01A5  00FE               	movwf	126
   275  01A6                     initloop:	
   276  01A6  0012               	moviw fsr0++
   277  01A7  001E               	movwi fsr1++
   278  01A8  0BFE               	decfsz	126,f
   279  01A9  29A6               	goto	initloop
   280  01AA  3400               	retlw	0
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:	
   284  0070                     ?_writeDigit:	
   285  0070                     ?_TIMER_Interrupt:	
   286                           ; 0 bytes @ 0x0
   287                           
   288  0070                     ??_TIMER_Interrupt:	
   289                           ; 0 bytes @ 0x0
   290                           
   291  0070                     ?_main:	
   292                           ; 0 bytes @ 0x0
   293                           
   294                           
   295                           ; 0 bytes @ 0x0
   296  0070                     	ds	1
   297  0071                     ??_writeDigit:	
   298  0071                     ?___lwdiv:	
   299                           ; 0 bytes @ 0x1
   300                           
   301  0071                     ?___lwmod:	
   302                           ; 2 bytes @ 0x1
   303                           
   304  0071                     ___lwdiv@divisor:	
   305                           ; 2 bytes @ 0x1
   306                           
   307  0071                     ___lwmod@divisor:	
   308                           ; 2 bytes @ 0x1
   309                           
   310                           
   311                           ; 2 bytes @ 0x1
   312  0071                     	ds	1
   313  0072                     writeDigit@digit:	
   314                           
   315                           ; 1 bytes @ 0x2
   316  0072                     	ds	1
   317  0073                     writeDigit@i:	
   318  0073                     ___lwdiv@dividend:	
   319                           ; 1 bytes @ 0x3
   320                           
   321  0073                     ___lwmod@dividend:	
   322                           ; 2 bytes @ 0x3
   323                           
   324                           
   325                           ; 2 bytes @ 0x3
   326  0073                     	ds	2
   327  0075                     ??___lwdiv:	
   328  0075                     ??___lwmod:	
   329                           ; 0 bytes @ 0x5
   330                           
   331                           
   332                           ; 0 bytes @ 0x5
   333  0075                     	ds	1
   334  0076                     ___lwmod@counter:	
   335  0076                     ___lwdiv@quotient:	
   336                           ; 1 bytes @ 0x6
   337                           
   338                           
   339                           ; 2 bytes @ 0x6
   340  0076                     	ds	2
   341  0078                     ___lwdiv@counter:	
   342                           
   343                           ; 1 bytes @ 0x8
   344  0078                     	ds	1
   345  0079                     ?_displayNumber:	
   346  0079                     displayNumber@number:	
   347                           ; 0 bytes @ 0x9
   348                           
   349                           
   350                           ; 2 bytes @ 0x9
   351  0079                     	ds	2
   352  007B                     ??_main:	
   353                           
   354                           	psect	cstackBANK0
   355  0031                     __pcstackBANK0:	
   356                           ; 0 bytes @ 0xB
   357                           
   358  0031                     ??_displayNumber:	
   359                           
   360                           ; 0 bytes @ 0x0
   361  0031                     	ds	2
   362                           
   363                           	psect	maintext
   364  00DC                     __pmaintext:	
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 79 in file "display.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;		None               void
   377 ;; Registers used:
   378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : B1F/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels required when called:    3
   390 ;; This function calls:
   391 ;;		_displayNumber
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           
   398                           ;psect for function _main
   399  00DC                     _main:	
   400                           
   401                           ;display.c: 84: OPTION_REGbits.TMR0CS = 0;
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   405  00DC  0021               	movlb	1	; select bank1
   406  00DD  1295               	bcf	21,5	;volatile
   407                           
   408                           ;display.c: 85: OPTION_REGbits.PSA = 0;
   409  00DE  1195               	bcf	21,3	;volatile
   410                           
   411                           ;display.c: 86: OPTION_REGbits.PS = 0b111;
   412  00DF  3007               	movlw	7
   413  00E0  0495               	iorwf	21,f	;volatile
   414                           
   415                           ;display.c: 87: TMR0 = 155;
   416  00E1  309B               	movlw	155
   417  00E2  0020               	movlb	0	; select bank0
   418  00E3  0095               	movwf	21	;volatile
   419                           
   420                           ;display.c: 90: TMR0IE = 1;
   421  00E4  168B               	bsf	11,5	;volatile
   422                           
   423                           ;display.c: 91: PEIE = 1;
   424  00E5  170B               	bsf	11,6	;volatile
   425                           
   426                           ;display.c: 92: GIE = 1;
   427  00E6  178B               	bsf	11,7	;volatile
   428                           
   429                           ;display.c: 95: TRISC = 0x00;
   430  00E7  0021               	movlb	1	; select bank1
   431  00E8  018E               	clrf	14	;volatile
   432                           
   433                           ;display.c: 97: LATC = 0x00;
   434  00E9  0022               	movlb	2	; select bank2
   435  00EA  018E               	clrf	14	;volatile
   436                           
   437                           ;display.c: 100: number = 30;
   438  00EB  301E               	movlw	30
   439  00EC  0020               	movlb	0	; select bank0
   440  00ED                     L1:	
   441  00ED  00AF               	movwf	_number
   442  00EE  3000               	movlw	0
   443  00EF  00B0               	movwf	_number+1
   444  00F0                     l851:	
   445                           ;display.c: 103: while (1) {
   446                           
   447                           
   448                           ;display.c: 104: counter++;
   449  00F0  3001               	movlw	1
   450  00F1  07AA               	addwf	_counter,f
   451  00F2  3000               	movlw	0
   452  00F3  3DAB               	addwfc	_counter+1,f
   453                           
   454                           ;display.c: 105: if (counter >= 100) {
   455  00F4  3000               	movlw	0
   456  00F5  022B               	subwf	_counter+1,w
   457  00F6  3064               	movlw	100
   458  00F7  1903               	skipnz
   459  00F8  022A               	subwf	_counter,w
   460  00F9  1C03               	skipc
   461  00FA  2905               	goto	l861
   462                           
   463                           ;display.c: 106: counter = 0;
   464  00FB  01AA               	clrf	_counter
   465  00FC  01AB               	clrf	_counter+1
   466                           
   467                           ;display.c: 107: if (number > 0)
   468  00FD  082F               	movf	_number,w
   469  00FE  0430               	iorwf	_number+1,w
   470  00FF  1903               	btfsc	3,2
   471  0100  2905               	goto	l861
   472                           
   473                           ;display.c: 108: number--;
   474  0101  3001               	movlw	1
   475  0102  02AF               	subwf	_number,f
   476  0103  3000               	movlw	0
   477  0104  3BB0               	subwfb	_number+1,f
   478  0105                     l861:	
   479                           
   480                           ;display.c: 109: }
   481                           ;display.c: 110: displayNumber(number);
   482  0105  0830               	movf	_number+1,w
   483  0106  00FA               	movwf	displayNumber@number+1
   484  0107  082F               	movf	_number,w
   485  0108  00F9               	movwf	displayNumber@number
   486  0109  3180  2026  3180   	fcall	_displayNumber
   487                           
   488                           ;display.c: 111: if (number == 0)
   489  010C  0020               	movlb	0	; select bank0
   490  010D  082F               	movf	_number,w
   491  010E  0430               	iorwf	_number+1,w
   492  010F  1D03               	btfss	3,2
   493  0110  28F0               	goto	l851
   494                           
   495                           ;display.c: 112: number = 30;
   496  0111  301E               	movlw	30
   497  0112  28ED               	goto	L1
   498  0113                     __end_of_main:	
   499                           
   500                           	psect	text1
   501  0026                     __ptext1:	
   502 ;; *************** function _displayNumber *****************
   503 ;; Defined at:
   504 ;;		line 42 in file "display.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  number          2    9[COMMON] unsigned int 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;		None               void
   511 ;; Registers used:
   512 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   520 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   521 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   522 ;;Total ram usage:        4 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    2
   525 ;; This function calls:
   526 ;;		___lwdiv
   527 ;;		___lwmod
   528 ;;		_writeDigit
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _displayNumber
   536  0026                     _displayNumber:	
   537                           
   538                           ;display.c: 43: d1 = number / 1000;
   539                           
   540                           ;incstack = 0
   541                           ; Regs used in _displayNumber: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   542  0026  30E8               	movlw	232
   543  0027  00F1               	movwf	___lwdiv@divisor
   544  0028  3003               	movlw	3
   545  0029  00F2               	movwf	___lwdiv@divisor+1
   546  002A  087A               	movf	displayNumber@number+1,w
   547  002B  00F4               	movwf	___lwdiv@dividend+1
   548  002C  0879               	movf	displayNumber@number,w
   549  002D  00F3               	movwf	___lwdiv@dividend
   550  002E  3181  2113  3180   	fcall	___lwdiv
   551  0031  0871               	movf	?___lwdiv,w
   552  0032  0020               	movlb	0	; select bank0
   553  0033  00B1               	movwf	??_displayNumber
   554  0034  0831               	movf	??_displayNumber,w
   555  0035  00FB               	movwf	_d1
   556                           
   557                           ;display.c: 44: number %= 1000;
   558  0036  30E8               	movlw	232
   559  0037  00F1               	movwf	___lwmod@divisor
   560  0038  3003               	movlw	3
   561  0039  00F2               	movwf	___lwmod@divisor+1
   562  003A  087A               	movf	displayNumber@number+1,w
   563  003B  00F4               	movwf	___lwmod@dividend+1
   564  003C  0879               	movf	displayNumber@number,w
   565  003D  00F3               	movwf	___lwmod@dividend
   566  003E  3181  2147  3180   	fcall	___lwmod
   567  0041  0872               	movf	?___lwmod+1,w
   568  0042  00FA               	movwf	displayNumber@number+1
   569  0043  0871               	movf	?___lwmod,w
   570  0044  00F9               	movwf	displayNumber@number
   571                           
   572                           ;display.c: 45: d2 = number / 100;
   573  0045  3064               	movlw	100
   574  0046  00F1               	movwf	___lwdiv@divisor
   575  0047  3000               	movlw	0
   576  0048  00F2               	movwf	___lwdiv@divisor+1
   577  0049  087A               	movf	displayNumber@number+1,w
   578  004A  00F4               	movwf	___lwdiv@dividend+1
   579  004B  0879               	movf	displayNumber@number,w
   580  004C  00F3               	movwf	___lwdiv@dividend
   581  004D  3181  2113  3180   	fcall	___lwdiv
   582  0050  0871               	movf	?___lwdiv,w
   583  0051  0020               	movlb	0	; select bank0
   584  0052  00B1               	movwf	??_displayNumber
   585  0053  0831               	movf	??_displayNumber,w
   586  0054  00AC               	movwf	_d2
   587                           
   588                           ;display.c: 46: number %= 100;
   589  0055  3064               	movlw	100
   590  0056  00F1               	movwf	___lwmod@divisor
   591  0057  3000               	movlw	0
   592  0058  00F2               	movwf	___lwmod@divisor+1
   593  0059  087A               	movf	displayNumber@number+1,w
   594  005A  00F4               	movwf	___lwmod@dividend+1
   595  005B  0879               	movf	displayNumber@number,w
   596  005C  00F3               	movwf	___lwmod@dividend
   597  005D  3181  2147  3180   	fcall	___lwmod
   598  0060  0872               	movf	?___lwmod+1,w
   599  0061  00FA               	movwf	displayNumber@number+1
   600  0062  0871               	movf	?___lwmod,w
   601  0063  00F9               	movwf	displayNumber@number
   602                           
   603                           ;display.c: 47: d3 = number / 10;
   604  0064  300A               	movlw	10
   605  0065  00F1               	movwf	___lwdiv@divisor
   606  0066  3000               	movlw	0
   607  0067  00F2               	movwf	___lwdiv@divisor+1
   608  0068  087A               	movf	displayNumber@number+1,w
   609  0069  00F4               	movwf	___lwdiv@dividend+1
   610  006A  0879               	movf	displayNumber@number,w
   611  006B  00F3               	movwf	___lwdiv@dividend
   612  006C  3181  2113  3180   	fcall	___lwdiv
   613  006F  0871               	movf	?___lwdiv,w
   614  0070  0020               	movlb	0	; select bank0
   615  0071  00B1               	movwf	??_displayNumber
   616  0072  0831               	movf	??_displayNumber,w
   617  0073  00AD               	movwf	_d3
   618                           
   619                           ;display.c: 48: d4 = number % 10;
   620  0074  300A               	movlw	10
   621  0075  00F1               	movwf	___lwmod@divisor
   622  0076  3000               	movlw	0
   623  0077  00F2               	movwf	___lwmod@divisor+1
   624  0078  087A               	movf	displayNumber@number+1,w
   625  0079  00F4               	movwf	___lwmod@dividend+1
   626  007A  0879               	movf	displayNumber@number,w
   627  007B  00F3               	movwf	___lwmod@dividend
   628  007C  3181  2147  3180   	fcall	___lwmod
   629  007F  0871               	movf	?___lwmod,w
   630  0080  0020               	movlb	0	; select bank0
   631  0081  00B1               	movwf	??_displayNumber
   632  0082  0831               	movf	??_displayNumber,w
   633  0083  00AE               	movwf	_d4
   634                           
   635                           ;display.c: 50: LATCbits.LATC3 = 1;
   636  0084  0022               	movlb	2	; select bank2
   637  0085  158E               	bsf	14,3	;volatile
   638                           
   639                           ;display.c: 51: LATCbits.LATC4 = 1;
   640  0086  160E               	bsf	14,4	;volatile
   641                           
   642                           ;display.c: 52: writeDigit(Digit[d1]);
   643  0087  087B               	movf	_d1,w
   644  0088  3E20               	addlw	(low (_Digit| 0))& (0+255)
   645  0089  0086               	movwf	6
   646  008A  0187               	clrf	7
   647  008B  0801               	movf	1,w
   648  008C  3181  2173  3180   	fcall	_writeDigit
   649                           
   650                           ;display.c: 53: _delay((unsigned long)((10)*(4000000/4000.0)));
   651  008F  300D               	movlw	13
   652  0090  0020               	movlb	0	; select bank0
   653  0091  00B2               	movwf	??_displayNumber+1
   654  0092  30FB               	movlw	251
   655  0093  00B1               	movwf	??_displayNumber
   656  0094                     u477:	
   657  0094  0BB1               	decfsz	??_displayNumber,f
   658  0095  2894               	goto	u477
   659  0096  0BB2               	decfsz	??_displayNumber+1,f
   660  0097  2894               	goto	u477
   661  0098  3200               	nop2
   662                           
   663                           ;display.c: 55: LATCbits.LATC3 = 0;
   664  0099  0022               	movlb	2	; select bank2
   665  009A  118E               	bcf	14,3	;volatile
   666                           
   667                           ;display.c: 56: LATCbits.LATC4 = 1;
   668  009B  160E               	bsf	14,4	;volatile
   669                           
   670                           ;display.c: 57: writeDigit(Digit[d2]);
   671  009C  0020               	movlb	0	; select bank0
   672  009D  082C               	movf	_d2,w
   673  009E  3E20               	addlw	(low (_Digit| 0))& (0+255)
   674  009F  0086               	movwf	6
   675  00A0  0187               	clrf	7
   676  00A1  0801               	movf	1,w
   677  00A2  3181  2173  3180   	fcall	_writeDigit
   678                           
   679                           ;display.c: 58: _delay((unsigned long)((10)*(4000000/4000.0)));
   680  00A5  300D               	movlw	13
   681  00A6  0020               	movlb	0	; select bank0
   682  00A7  00B2               	movwf	??_displayNumber+1
   683  00A8  30FB               	movlw	251
   684  00A9  00B1               	movwf	??_displayNumber
   685  00AA                     u487:	
   686  00AA  0BB1               	decfsz	??_displayNumber,f
   687  00AB  28AA               	goto	u487
   688  00AC  0BB2               	decfsz	??_displayNumber+1,f
   689  00AD  28AA               	goto	u487
   690  00AE  3200               	nop2
   691                           
   692                           ;display.c: 60: LATCbits.LATC3 = 1;
   693  00AF  0022               	movlb	2	; select bank2
   694  00B0  158E               	bsf	14,3	;volatile
   695                           
   696                           ;display.c: 61: LATCbits.LATC4 = 0;
   697  00B1  120E               	bcf	14,4	;volatile
   698                           
   699                           ;display.c: 62: writeDigit(Digit[d3]);
   700  00B2  0020               	movlb	0	; select bank0
   701  00B3  082D               	movf	_d3,w
   702  00B4  3E20               	addlw	(low (_Digit| 0))& (0+255)
   703  00B5  0086               	movwf	6
   704  00B6  0187               	clrf	7
   705  00B7  0801               	movf	1,w
   706  00B8  3181  2173  3180   	fcall	_writeDigit
   707                           
   708                           ;display.c: 63: _delay((unsigned long)((10)*(4000000/4000.0)));
   709  00BB  300D               	movlw	13
   710  00BC  0020               	movlb	0	; select bank0
   711  00BD  00B2               	movwf	??_displayNumber+1
   712  00BE  30FB               	movlw	251
   713  00BF  00B1               	movwf	??_displayNumber
   714  00C0                     u497:	
   715  00C0  0BB1               	decfsz	??_displayNumber,f
   716  00C1  28C0               	goto	u497
   717  00C2  0BB2               	decfsz	??_displayNumber+1,f
   718  00C3  28C0               	goto	u497
   719  00C4  3200               	nop2
   720                           
   721                           ;display.c: 65: LATCbits.LATC3 = 0;
   722  00C5  0022               	movlb	2	; select bank2
   723  00C6  118E               	bcf	14,3	;volatile
   724                           
   725                           ;display.c: 66: LATCbits.LATC4 = 0;
   726  00C7  120E               	bcf	14,4	;volatile
   727                           
   728                           ;display.c: 67: writeDigit(Digit[d4]);
   729  00C8  0020               	movlb	0	; select bank0
   730  00C9  082E               	movf	_d4,w
   731  00CA  3E20               	addlw	(low (_Digit| 0))& (0+255)
   732  00CB  0086               	movwf	6
   733  00CC  0187               	clrf	7
   734  00CD  0801               	movf	1,w
   735  00CE  3181  2173  3180   	fcall	_writeDigit
   736                           
   737                           ;display.c: 68: _delay((unsigned long)((10)*(4000000/4000.0)));
   738  00D1  300D               	movlw	13
   739  00D2  0020               	movlb	0	; select bank0
   740  00D3  00B2               	movwf	??_displayNumber+1
   741  00D4  30FB               	movlw	251
   742  00D5  00B1               	movwf	??_displayNumber
   743  00D6                     u507:	
   744  00D6  0BB1               	decfsz	??_displayNumber,f
   745  00D7  28D6               	goto	u507
   746  00D8  0BB2               	decfsz	??_displayNumber+1,f
   747  00D9  28D6               	goto	u507
   748  00DA  3200               	nop2
   749  00DB  0008               	return
   750  00DC                     __end_of_displayNumber:	
   751                           
   752                           	psect	text2
   753  0173                     __ptext2:	
   754 ;; *************** function _writeDigit *****************
   755 ;; Defined at:
   756 ;;		line 25 in file "display.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  digit           1    wreg     unsigned char 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  digit           1    2[COMMON] unsigned char 
   761 ;;  i               1    3[COMMON] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   775 ;;Total ram usage:        3 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_displayNumber
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           
   786                           ;psect for function _writeDigit
   787  0173                     _writeDigit:	
   788                           
   789                           ;incstack = 0
   790                           ; Regs used in _writeDigit: [wreg+status,2+status,0]
   791                           ;writeDigit@digit stored from wreg
   792  0173  00F2               	movwf	writeDigit@digit
   793                           
   794                           ;display.c: 26: unsigned char i;
   795                           ;display.c: 27: LATC7 = 0;
   796  0174  0022               	movlb	2	; select bank2
   797  0175  138E               	bcf	14,7	;volatile
   798                           
   799                           ;display.c: 28: LATC5 = 0;
   800  0176  128E               	bcf	14,5	;volatile
   801                           
   802                           ;display.c: 29: LATC7 = 0;
   803  0177  138E               	bcf	14,7	;volatile
   804                           
   805                           ;display.c: 30: LATC5 = 0;
   806  0178  128E               	bcf	14,5	;volatile
   807                           
   808                           ;display.c: 31: for (i = 0; i < 8; i++) {
   809  0179  01F3               	clrf	writeDigit@i
   810  017A  3008               	movlw	8
   811  017B  0273               	subwf	writeDigit@i,w
   812  017C  1803               	btfsc	3,0
   813  017D  2998               	goto	l44
   814  017E                     l671:	
   815                           
   816                           ;display.c: 32: LATC6 = (digit >> i) & 0x01;
   817  017E  0872               	movf	writeDigit@digit,w
   818  017F  00F1               	movwf	??_writeDigit
   819  0180  0A73               	incf	writeDigit@i,w
   820  0181  2983               	goto	u244
   821  0182                     u245:	
   822  0182  36F1               	lsrf	??_writeDigit,f
   823  0183                     u244:	
   824  0183  0B89               	decfsz	9,f
   825  0184  2982               	goto	u245
   826  0185  1C71               	btfss	??_writeDigit,0
   827  0186  298A               	goto	u250
   828  0187  0022               	movlb	2	; select bank2
   829  0188  170E               	bsf	14,6	;volatile
   830  0189  298C               	goto	l673
   831  018A                     u250:	
   832  018A  0022               	movlb	2	; select bank2
   833  018B  130E               	bcf	14,6	;volatile
   834  018C                     l673:	
   835                           
   836                           ;display.c: 33: LATC7 = 1;
   837  018C  178E               	bsf	14,7	;volatile
   838                           
   839                           ;display.c: 34: LATC7 = 1;
   840  018D  178E               	bsf	14,7	;volatile
   841                           
   842                           ;display.c: 35: LATC7 = 0;
   843  018E  138E               	bcf	14,7	;volatile
   844                           
   845                           ;display.c: 36: LATC7 = 0;
   846  018F  138E               	bcf	14,7	;volatile
   847  0190  3001               	movlw	1
   848  0191  00F1               	movwf	??_writeDigit
   849  0192  0871               	movf	??_writeDigit,w
   850  0193  07F3               	addwf	writeDigit@i,f
   851  0194  3008               	movlw	8
   852  0195  0273               	subwf	writeDigit@i,w
   853  0196  1C03               	skipc
   854  0197  297E               	goto	l671
   855  0198                     l44:	
   856                           
   857                           ;display.c: 37: }
   858                           ;display.c: 38: LATC5 = 1;
   859  0198  168E               	bsf	14,5	;volatile
   860                           
   861                           ;display.c: 39: LATC5 = 1;
   862  0199  168E               	bsf	14,5	;volatile
   863  019A  0008               	return
   864  019B                     __end_of_writeDigit:	
   865                           
   866                           	psect	text3
   867  0147                     __ptext3:	
   868 ;; *************** function ___lwmod *****************
   869 ;; Defined at:
   870 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  divisor         2    1[COMMON] unsigned int 
   873 ;;  dividend        2    3[COMMON] unsigned int 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  counter         1    6[COMMON] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2    1[COMMON] unsigned int 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   889 ;;Total ram usage:        6 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_displayNumber
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function ___lwmod
   901  0147                     ___lwmod:	
   902                           
   903                           ;incstack = 0
   904                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   905  0147  0871               	movf	___lwmod@divisor,w
   906  0148  0472               	iorwf	___lwmod@divisor+1,w
   907  0149  1903               	btfsc	3,2
   908  014A  296E               	goto	l727
   909  014B  01F6               	clrf	___lwmod@counter
   910  014C  0AF6               	incf	___lwmod@counter,f
   911  014D                     l717:	
   912  014D  1BF2               	btfsc	___lwmod@divisor+1,7
   913  014E  2959               	goto	l719
   914  014F  3001               	movlw	1
   915  0150                     u365:	
   916  0150  35F1               	lslf	___lwmod@divisor,f
   917  0151  0DF2               	rlf	___lwmod@divisor+1,f
   918  0152  0B89               	decfsz	9,f
   919  0153  2950               	goto	u365
   920  0154  3001               	movlw	1
   921  0155  00F5               	movwf	??___lwmod
   922  0156  0875               	movf	??___lwmod,w
   923  0157  07F6               	addwf	___lwmod@counter,f
   924  0158  294D               	goto	l717
   925  0159                     l719:	
   926  0159  0872               	movf	___lwmod@divisor+1,w
   927  015A  0274               	subwf	___lwmod@dividend+1,w
   928  015B  1D03               	skipz
   929  015C  295F               	goto	u385
   930  015D  0871               	movf	___lwmod@divisor,w
   931  015E  0273               	subwf	___lwmod@dividend,w
   932  015F                     u385:	
   933  015F  1C03               	skipc
   934  0160  2965               	goto	l723
   935  0161  0871               	movf	___lwmod@divisor,w
   936  0162  02F3               	subwf	___lwmod@dividend,f
   937  0163  0872               	movf	___lwmod@divisor+1,w
   938  0164  3BF4               	subwfb	___lwmod@dividend+1,f
   939  0165                     l723:	
   940  0165  3001               	movlw	1
   941  0166                     u395:	
   942  0166  36F2               	lsrf	___lwmod@divisor+1,f
   943  0167  0CF1               	rrf	___lwmod@divisor,f
   944  0168  0B89               	decfsz	9,f
   945  0169  2966               	goto	u395
   946  016A  3001               	movlw	1
   947  016B  02F6               	subwf	___lwmod@counter,f
   948  016C  1D03               	btfss	3,2
   949  016D  2959               	goto	l719
   950  016E                     l727:	
   951  016E  0874               	movf	___lwmod@dividend+1,w
   952  016F  00F2               	movwf	?___lwmod+1
   953  0170  0873               	movf	___lwmod@dividend,w
   954  0171  00F1               	movwf	?___lwmod
   955  0172  0008               	return
   956  0173                     __end_of___lwmod:	
   957                           
   958                           	psect	text4
   959  0113                     __ptext4:	
   960 ;; *************** function ___lwdiv *****************
   961 ;; Defined at:
   962 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  divisor         2    1[COMMON] unsigned int 
   965 ;;  dividend        2    3[COMMON] unsigned int 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  quotient        2    6[COMMON] unsigned int 
   968 ;;  counter         1    8[COMMON] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  2    1[COMMON] unsigned int 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   979 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   981 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   982 ;;Total ram usage:        8 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    1
   985 ;; This function calls:
   986 ;;		Nothing
   987 ;; This function is called by:
   988 ;;		_displayNumber
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           
   993                           ;psect for function ___lwdiv
   994  0113                     ___lwdiv:	
   995                           
   996                           ;incstack = 0
   997                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   998  0113  01F6               	clrf	___lwdiv@quotient
   999  0114  01F7               	clrf	___lwdiv@quotient+1
  1000  0115  0871               	movf	___lwdiv@divisor,w
  1001  0116  0472               	iorwf	___lwdiv@divisor+1,w
  1002  0117  1903               	btfsc	3,2
  1003  0118  2942               	goto	l705
  1004  0119  01F8               	clrf	___lwdiv@counter
  1005  011A  0AF8               	incf	___lwdiv@counter,f
  1006  011B                     l693:	
  1007  011B  1BF2               	btfsc	___lwdiv@divisor+1,7
  1008  011C  2927               	goto	l695
  1009  011D  3001               	movlw	1
  1010  011E                     u295:	
  1011  011E  35F1               	lslf	___lwdiv@divisor,f
  1012  011F  0DF2               	rlf	___lwdiv@divisor+1,f
  1013  0120  0B89               	decfsz	9,f
  1014  0121  291E               	goto	u295
  1015  0122  3001               	movlw	1
  1016  0123  00F5               	movwf	??___lwdiv
  1017  0124  0875               	movf	??___lwdiv,w
  1018  0125  07F8               	addwf	___lwdiv@counter,f
  1019  0126  291B               	goto	l693
  1020  0127                     l695:	
  1021  0127  3001               	movlw	1
  1022  0128                     u315:	
  1023  0128  35F6               	lslf	___lwdiv@quotient,f
  1024  0129  0DF7               	rlf	___lwdiv@quotient+1,f
  1025  012A  0B89               	decfsz	9,f
  1026  012B  2928               	goto	u315
  1027  012C  0872               	movf	___lwdiv@divisor+1,w
  1028  012D  0274               	subwf	___lwdiv@dividend+1,w
  1029  012E  1D03               	skipz
  1030  012F  2932               	goto	u325
  1031  0130  0871               	movf	___lwdiv@divisor,w
  1032  0131  0273               	subwf	___lwdiv@dividend,w
  1033  0132                     u325:	
  1034  0132  1C03               	skipc
  1035  0133  2939               	goto	l701
  1036  0134  0871               	movf	___lwdiv@divisor,w
  1037  0135  02F3               	subwf	___lwdiv@dividend,f
  1038  0136  0872               	movf	___lwdiv@divisor+1,w
  1039  0137  3BF4               	subwfb	___lwdiv@dividend+1,f
  1040  0138  1476               	bsf	___lwdiv@quotient,0
  1041  0139                     l701:	
  1042  0139  3001               	movlw	1
  1043  013A                     u335:	
  1044  013A  36F2               	lsrf	___lwdiv@divisor+1,f
  1045  013B  0CF1               	rrf	___lwdiv@divisor,f
  1046  013C  0B89               	decfsz	9,f
  1047  013D  293A               	goto	u335
  1048  013E  3001               	movlw	1
  1049  013F  02F8               	subwf	___lwdiv@counter,f
  1050  0140  1D03               	btfss	3,2
  1051  0141  2927               	goto	l695
  1052  0142                     l705:	
  1053  0142  0877               	movf	___lwdiv@quotient+1,w
  1054  0143  00F2               	movwf	?___lwdiv+1
  1055  0144  0876               	movf	___lwdiv@quotient,w
  1056  0145  00F1               	movwf	?___lwdiv
  1057  0146  0008               	return
  1058  0147                     __end_of___lwdiv:	
  1059                           
  1060                           	psect	intentry
  1061  0004                     __pintentry:	
  1062 ;; *************** function _TIMER_Interrupt *****************
  1063 ;; Defined at:
  1064 ;;		line 71 in file "display.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;		None               void
  1071 ;; Registers used:
  1072 ;;		wreg
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		Interrupt level 1
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091  0004                     _TIMER_Interrupt:	
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _TIMER_Interrupt: [wreg]
  1095  0004  3180               	pagesel	$
  1096  0005  0020               	movlb	0	; select bank0
  1097  0006  087F               	movf	127,w
  1098  0007  00F0               	movwf	??_TIMER_Interrupt
  1099                           
  1100                           ;display.c: 72: if (TMR0IF) {
  1101  0008  1D0B               	btfss	11,2	;volatile
  1102  0009  280D               	goto	i1l52
  1103                           
  1104                           ;display.c: 73: TMR0IF = 0;
  1105  000A  110B               	bcf	11,2	;volatile
  1106                           
  1107                           ;display.c: 76: TMR0 = 155;
  1108  000B  309B               	movlw	155
  1109  000C  0095               	movwf	21	;volatile
  1110  000D                     i1l52:	
  1111  000D  0870               	movf	??_TIMER_Interrupt,w
  1112  000E  00FF               	movwf	127
  1113  000F  0009               	retfie
  1114  0010                     __end_of_TIMER_Interrupt:	
  1115  007E                     btemp	set	126	;btemp
  1116  007E                     wtemp	set	126
  1117  007E                     wtemp0	set	126
  1118  0080                     wtemp1	set	128
  1119  0082                     wtemp2	set	130
  1120  0084                     wtemp3	set	132
  1121  0086                     wtemp4	set	134
  1122  0088                     wtemp5	set	136
  1123  007F                     wtemp6	set	127
  1124  007E                     ttemp	set	126
  1125  007E                     ttemp0	set	126
  1126  0081                     ttemp1	set	129
  1127  0084                     ttemp2	set	132
  1128  0087                     ttemp3	set	135
  1129  007F                     ttemp4	set	127
  1130  007E                     ltemp	set	126
  1131  007E                     ltemp0	set	126
  1132  0082                     ltemp1	set	130
  1133  0086                     ltemp2	set	134
  1134  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      2      19
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_displayNumber
    _displayNumber->___lwdiv

Critical Paths under _TIMER_Interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_displayNumber

Critical Paths under _TIMER_Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER_Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER_Interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER_Interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER_Interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER_Interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TIMER_Interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TIMER_Interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TIMER_Interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TIMER_Interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TIMER_Interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TIMER_Interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TIMER_Interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1304
                      _displayNumber
 ---------------------------------------------------------------------------------
 (1) _displayNumber                                        4     2      2    1304
                                              9 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___lwdiv
                            ___lwmod
                         _writeDigit
 ---------------------------------------------------------------------------------
 (2) _writeDigit                                           3     3      0      90
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     477
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     480
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TIMER_Interrupt                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayNumber
     ___lwdiv
     ___lwmod
     _writeDigit

 _TIMER_Interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      13       5       23.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      1F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      1F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu May 09 08:39:28 2024

             __CFG_CP$OFF 0000                        l44 0198                        _d1 007B  
                      _d2 002C                        _d3 002D                        _d4 002E  
                     l701 0139                       l705 0142                       l723 0165  
                     l717 014D                       l719 0159                       l727 016E  
                     l671 017E                       l673 018C                       l851 00F0  
                     l693 011B                       l861 0105                       l695 0127  
                     _GIE 005F                       u250 018A                       u315 0128  
                     u244 0183                       u325 0132                       u245 0182  
                     u335 013A                       u507 00D6                       u365 0150  
                     u295 011E                       u385 015F                       u395 0166  
                     u477 0094                       u487 00AA                       u497 00C0  
                     wreg 0009              __CFG_FOSC$HS 0000            ?_displayNumber 0079  
                    _LATC 010E                      _PEIE 005E                      i1l52 000D  
                    _TMR0 0015              __CFG_WRT$OFF 0000                      _main 00DC  
                    fsr0h 0005                      fsr1h 0007                      fsr0l 0004  
                    indf1 0001                      fsr1l 0006                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0010  
                    ttemp 007E                      wtemp 007E                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _LATC5 0875                     _LATC6 0876  
                   _LATC7 0877           __end_of___lwdiv 0147           __end_of___lwmod 0173  
                   _TRISC 008E                     _Digit 0020                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F            __CFG_MCLRE$OFF 0000           __initialization 0012  
            __end_of_main 0113       displayNumber@number 0079                    ??_main 007B  
         ??_displayNumber 0031                    _TMR0IE 005D                    _TMR0IF 005A  
          __CFG_PWRTE$OFF 0000                 ??___lwdiv 0075                 ??___lwmod 0075  
                  _number 002F  __size_of_TIMER_Interrupt 000C   __end_of__initialization 0023  
          __pcstackCOMMON 0070              __pidataBANK0 019B            _OPTION_REGbits 0095  
              __pbssBANK0 002A                __pmaintext 00DC                __pintentry 0004  
       ??_TIMER_Interrupt 0070                   ___lwdiv 0113                   ___lwmod 0147  
                 __ptext1 0026                   __ptext2 0173                   __ptext3 0147  
                 __ptext4 0113                   _counter 002A      end_of_initialization 0023  
                 init_ram 01A5                   initloop 01A6     __end_of_displayNumber 00DC  
              _writeDigit 0173       start_initialization 0012               __pdataBANK0 0020  
         _TIMER_Interrupt 0004               __pbssCOMMON 007B                 ___latbits 0002  
           __pcstackBANK0 0031                 __pnvBANK0 002F          ___lwdiv@dividend 0073  
             ?_writeDigit 0070                  ?___lwdiv 0071                  ?___lwmod 0071  
        ___lwdiv@quotient 0076                  _LATCbits 010E   __end_of_TIMER_Interrupt 0010  
             writeDigit@i 0073           writeDigit@digit 0072       __size_of_writeDigit 0028  
        __size_of___lwdiv 0034          __size_of___lwmod 002C           ___lwdiv@divisor 0071  
         ___lwdiv@counter 0078             __size_of_main 0037          ?_TIMER_Interrupt 0070  
  __size_of_displayNumber 00B6                  intlevel1 0000          ___lwmod@dividend 0073  
       __CFG_CLKOUTEN$OFF 0000              ??_writeDigit 0071           ___lwmod@divisor 0071  
         ___lwmod@counter 0076             _displayNumber 0026        __end_of_writeDigit 019B  
